To get started with using this take home assignment please run this command to install all dependancies. 

pip install pytest fastapi pydantic sqlalchemy

These are the main api endpoints:
POST /v1/users
    - Makes a new user from an email address and return a user_id
POST /v1/users/{user_id}/loans
    - Makes a new loan for a user_id and returns a loan_id
GET /v1/users/{user_id}/loans
    - Get all loans for a user_id
PATCH /v1/users/{user_id}/loans/{loan_id}/share/{shared_with_user_id}
    - Shares a loan with another a user
GET /v1/users/{user_id}/loans/{loan_id}/schedule
    - Returns a schedule for the a given loan_id and user_id
GET /v1/users/{user_id}/loans/{loan_id}/schedule/{month}
    - Returns a specific month schedule for a given loan_id and user_id

To start the server locally. I ran this command:

fastapi dev main.py


Please look at ./test_main.py for all expected inputs and outputs as well as for examples on how to use the api.
    - test_create_user(), test_create_loan() will not pass criteria unless first checking what the latest id is and setting the passing criteria to latest + 1
    - test_share_loan() will not pass if the user was already shared with, so this also requires a 'fresh' test

To test on your own:
    I would recommend to look at the guide above and input your own values for the variables in brackets. You can see examples in the ./test_main.py file.

My approach: 
    I first made the data models. The data models include a users table and loans table. The users table includes information about the user and their loans. THe loans table includes information about all loans, its owner, and its shared users. I then built the endpoints around what I wanted the data models to look like. So, for example, I wanted the shared_users list to be mutable, and I made the PATCH /v1/users/{user_id}/loans/{loan_id}/share/{shared_with_user_id} endpoint mutate the shared users array. I also tried to follow best practices for making a REST API like ensuring best HTTP usage and proper request methods. 
